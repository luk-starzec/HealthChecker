@using HealthDashboard.WebApp.Interfaces
@using HealthDashboard.WebApp.ViewModels

@inject IItemService _itemService;

<div class="group__wrapper">

    <h3 class="group__header">@Group.Label</h3>

    <button class="button group__button--refresh" @onclick="Refresh" title="Refresh group">
        <SvgIcon SvgUrl="/assets/refresh_icon.svg" />
    </button>

    <ul class="group__list">
        @foreach (var item in Group.Items.OrderBy(r => r.Order))
        {
            <li class="group__list-item">
                <ItemView Item="@item" />
            </li>
        }

    </ul>

</div>

@code {
    [Parameter]
    public required GroupViewModel Group { get; set; }

    async Task Refresh()
    {
        var options = new ParallelOptions { MaxDegreeOfParallelism = 10 };
        await Parallel.ForEachAsync(
            Group.Items,
            options,
            async (item, _) =>
                await InvokeAsync(async () => await _itemService.CheckHealthAsync(item.Name, item.Endpoint))
        );
    }
}
